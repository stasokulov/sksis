"use strict";

//    Находим помеченные блоки. В каждом из них находим внутренний помеченный блок с текстом.
//    Текст обрезаем так, чтобы внутренний блок не растягивался и не выходил за рамки внешнего.
//    Добавляем многоточие в конце.
var containers = document.querySelectorAll('[data-cut_text="container"]'); //const containersArray = [...containers]; // Doesn't work in IE11 and doesn't convert with Babel

var containersArray = Array.prototype.slice.call(containers, 0);
containersArray.forEach(function (container) {
  // Собираем данные о блоке.
  var contHeight = container.offsetHeight;
  var contWidth = container.offsetWidth;
  var blockText = container.querySelector('[data-cut_text="text"]');
  var text = blockText.innerHTML; // Клонируем блок, вставляем клон в родитель исходного блока, чтобы на них действовали одинаковые стили.
  // Скрываем клон, снимаем ограничение на высоту, задаем ширину равную ширине исходного блока.

  var cloneContainer = container.cloneNode(true);
  cloneContainer.style.position = 'absolute';
  cloneContainer.style.visibility = 'hidden';
  cloneContainer.style.height = 'auto';
  cloneContainer.style.width = contWidth + 'px';
  var parentContainer = container.parentElement;
  parentContainer.appendChild(cloneContainer); // Если клон растянулся в высоту, то у текста в клоне итеративно отрезаем символ с конца, добавляем многоточие, вставляем обратно, снова сравниваем.

  var cloneBlockText = cloneContainer.querySelector('[data-cut_text="text"]');
  var cutTextLength = text.length;

  for (; cloneContainer.offsetHeight > contHeight && cutTextLength >= 0; cutTextLength--) {
    cloneBlockText.innerHTML = text.substring(0, cutTextLength) + '...';
  } // Когда высота клона перестала превышать высоту исходного блока, или если символы закончились, вставляем обрезанный текств исходный блок.


  blockText.innerHTML = cloneBlockText.innerHTML; // Удаляем клон.
  // cloneContainer.remove();

  parentContainer.removeChild(cloneContainer); //For IE
}); // При клике на бургер скрываем блоки ниже хедера.

var burger = document.querySelector('.burger');
var main = document.querySelector('main');
var footer = document.querySelector('footer');
burger.addEventListener('click', function () {
  main.classList.toggle('hidden');
  footer.classList.toggle('hidden');
}); // Вставляем дату в помеченные блоки.

var date = new Date();
var year = date.getFullYear();
var dateContainers = document.querySelectorAll('[data-datetime]');
var dateContainersArray = Array.prototype.slice.call(dateContainers); //For IE

dateContainersArray.forEach(function (container) {
  if (container.dataset.datetime === 'year') {
    container.innerHTML = year;
  }
}); // В стопке слайдов по очереди переставляем стиль, дающий видимость слайду.
// Каждый раз перезаписываем содержимое полей баннера данными из базы.
// Когда слайды заканчиваются, начинаем сначала.

var slider = document.querySelector('.slider');
var slides = slider.querySelectorAll('.slide');
var slidesArray = Array.prototype.slice.call(slides); //For IE

var counter = 0;
var banner = document.querySelector('.banner');
var eventDay = banner.querySelector('.banner__event-day');
var eventMonth = banner.querySelector('.banner__event-month');
var eventTitle = banner.querySelector('.banner__event-title');
var eventSubtitle = banner.querySelector('.banner__event-subtitle');
var sliderDataBase = [{
  day: 25,
  month: 'января',
  title: 'день студента',
  subtitle: 'Подздравляем всех учащихся с Днем студента. Желаем творческих и профессиональных успехов.'
}, {
  day: 1,
  month: 'апреля',
  title: 'день дурака',
  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam ipsum iusto labore nulla!'
}, {
  day: 31,
  month: 'декабря',
  title: 'Новый год',
  subtitle: 'Изначально Раиса Кудашева опубликовала стихотворение «Ёлка» в детском журнале «Малютка» в 1903 году.'
}];

function showFirstSlide() {
  slidesArray.forEach(function (slide) {
    slide.classList.remove('active');
  });
  counter = 0;
  slidesArray[counter].classList.add('active');
  fillBanner(counter);
}

function turnSlides() {
  if (counter < slidesArray.length - 1) {
    slidesArray[counter].classList.remove('active');
    slidesArray[counter + 1].classList.add('active');
    counter++;
    fillBanner(counter);
  } else {
    showFirstSlide();
  }
}

function fillBanner(counter) {
  var currentSlide = sliderDataBase[counter];
  eventDay.innerHTML = currentSlide.day;
  eventMonth.innerHTML = currentSlide.month;
  eventTitle.innerHTML = currentSlide.title;
  eventSubtitle.innerHTML = currentSlide.subtitle;
}

showFirstSlide();
setInterval(turnSlides, 4000); // Когда целевой блок хедера доскролливается до верха страницы, вынимаем его из потока и фиксируем его относительно экрана.
// Чтобы нижележащие блоки не прыгнули вверх, заменяем вынутый блок пустым блоком той же высоты.

window.addEventListener('scroll', get_sticky_header);

function get_sticky_header() {
  var scrolled = window.pageYOffset || document.documentElement.scrollTop;
  var header = document.querySelector("header");
  var fixed = document.querySelector("header.fixed");
  var emptyHeader = document.querySelector(".empty-header");
  var sticky = document.querySelector(".sticky");
  var headerPaddingTop = 22;
  var mobile = window.innerWidth < 992;

  if (header) {
    if (scrolled > sticky.offsetTop - headerPaddingTop && fixed === null && mobile) {
      var emptyBlock = document.createElement('div');
      emptyBlock.classList.add('empty-header');
      emptyBlock.style.height = header.offsetHeight + 'px';
      header.insertAdjacentElement('beforebegin', emptyBlock);
      header.classList.add('fixed');
    } else if (scrolled <= sticky.offsetTop + headerPaddingTop && fixed !== null) {
      header.classList.remove('fixed'); // emptyHeader.remove();

      emptyHeader.parentElement.removeChild(emptyHeader); //For IE
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
